# This workflow provisions all the necessary resources for the demo application from aca-revision-and-traffic-management folder.
# Traffic splitting can be automated further, with revision name generation, health checks and full re-routing to the new version upon successful checks.
# Microsoft has created a useful repository with a sample implementation of this process that can be used for reference and inspiration: https://github.com/Azure-Samples/containerapps-blue-green
name: deploy-aca-revision-and-traffic-management-apps
on:
  push:
    branches:
      - 'main'
    paths:
      - 'aca-revision-and-traffic-management/**'
      - '**/deploy-aca-revision-and-traffic-management-apps.yml'

  workflow_dispatch:

env:
  AZURE_REGION: 'Central India'

permissions:
  id-token: write
  contents: read

jobs:
  deploy-apps-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3        

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to dev
        uses: azure/arm-deploy@v2
        with:
          scope: 'subscription'
          deploymentName: ${{ github.run_number }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template: ${{ github.workspace }}/aca-revision-and-traffic-management/main.bicep
          parameters: ${{ github.workspace }}/aca-revision-and-traffic-management/parameters/dev.bicepparam
          region: ${{ env.AZURE_REGION }}
